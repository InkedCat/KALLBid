image: maven:3.9.4-eclipse-temurin-17

stages:
  - build
  - test
  - visualize
  - package
  - deploy
  - release
  - versioning

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Djansi.force=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -Dstyle.color=always"
  CACHE_KEY: "$CI_COMMIT_REF_SLUG"
  API_URL: "https://gitlabinfo.iutmontp.univ-montp2.fr/api/v4"
  REGISTRY_URL: "$API_URL/projects/$CI_PROJECT_ID/packages/generic"
  VARIABLE_URL: "$API_URL/projects/$CI_PROJECT_ID/variables"

cache:
  key: "$CACHE_KEY"
  paths:
    - .m2/repository/

include:
  - local: 'modules/.gitlab-ci.yml'
  - local: 'libs/.gitlab-ci.yml'


# Modules templates
.build-module:
  stage: build
  script:
    - echo "Building $MODULE"
    - mvn -pl $MODULE clean compile -am

.test-module:
  stage: test
  coverage: /\d+.\d+ \% covered/
  script:
    - echo "Testing $MODULE"
    - mvn -pl $MODULE test -am
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, "instructions covered"; print 100*covered/instructions, "% covered" }' $MODULE/target/site/jacoco/jacoco.csv
  artifacts:
    reports:
      junit:
        - $MODULE/target/surefire-reports/TEST-*.xml
    paths:
      - $MODULE/target/site/jacoco/jacoco.xml
    expire_in: 1 hour

.coverage-module:
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.9
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  script:
    - python /opt/cover2cover.py $MODULE/target/site/jacoco/jacoco.xml $CI_PROJECT_DIR/src/main/java/ > $MODULE/target/site/cobertura.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $MODULE/target/site/cobertura.xml

.package-module:
  stage: package
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "Deploying $MODULE"
    - 'mvn -Drevision=$PROJECT_VERSION -pl $MODULE package -am'
    - mv -f $MODULE/target/$MODULE_NAME-$PROJECT_VERSION-jar-with-dependencies.jar $MODULE/target/$MODULE_NAME-$PROJECT_VERSION.jar
  artifacts:
    paths:
      - $MODULE/target/*.jar
    expire_in: 1 hour

.deploy-module:
  variables: { MODULE_FILE: "$MODULE_NAME-$PROJECT_VERSION.jar" }
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - 'FULLPATH=$CI_PROJECT_DIR/$MODULE/target/$MODULE_FILE'
    - 'curl --header "PRIVATE-TOKEN: $PROJECT_ACCESS_KEY" --upload-file $FULLPATH "$REGISTRY_URL/applications-encheres/$PROJECT_VERSION/$MODULE_FILE"'


# Build modules
build-autorite-module:
  extends:
    - .autorite-module
    - .build-module

build-encherisseur-module:
  extends:
    - .encherisseur-module
    - .build-module

build-vendeur-module:
  extends:
    - .vendeur-module
    - .build-module

build-socketwrapper-module:
  extends:
    - .socketwrapper-module
    - .build-module

# Test modules
test-autorite-module:
  extends:
    - .autorite-module
    - .test-module
  needs:
    - build-autorite-module

test-encherisseur-module:
  extends:
    - .encherisseur-module
    - .test-module
  needs:
    - build-encherisseur-module

test-vendeur-module:
  extends:
    - .vendeur-module
    - .test-module
  needs:
    - build-vendeur-module

test-socketwrapper-module:
  extends:
    - .socketwrapper-module
    - .test-module
  needs:
    - build-socketwrapper-module

# Coverage modules
#
# TODO: FIX MISSING DEPENDENCY FROM PREVIOUS JOBS
#
#coverage-autorite-module:
#  extends:
#    - .autorite-module
#    - .coverage-module
#  dependencies:
#    - test-autorite-module

#coverage-encherisseur-module:
#  extends:
#    - .encherisseur-module
#    - .coverage-module
#  dependencies:
#    - test-encherisseur-module

#coverage-vendeur-module:
#  extends:
#    - .vendeur-module
#    - .coverage-module
#  dependencies:
#    - test-vendeur-module

#coverage-socketwrapper-module:
#    extends:
#        - .socketwrapper-module
#        - .coverage-module
#    dependencies:
#        - test-socketwrapper-module

# Package modules
package-autorite-module:
  extends:
    - .autorite-module
    - .package-module
  needs:
    - test-autorite-module

package-encherisseur-module:
  extends:
    - .encherisseur-module
    - .package-module
  needs:
    - test-encherisseur-module

package-vendeur-module:
  extends:
    - .vendeur-module
    - .package-module
  needs:
    - test-vendeur-module


# Deploy modules
deploy-autorite-module:
  extends:
    - .autorite-module
    - .deploy-module
  needs:
    - package-autorite-module

deploy-encherisseur-module:
  extends:
    - .encherisseur-module
    - .deploy-module
  needs:
    - package-encherisseur-module

deploy-vendeur-module:
  extends:
    - .vendeur-module
    - .deploy-module
  needs:
    - package-vendeur-module


#Release modules
update-version:
  stage: versioning
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^release/
  script:
    - 'VERSION=`echo $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME | grep -Po "(?<=\/).*\d"`'
    - 'curl --location --request PUT "$VARIABLE_URL/PROJECT_VERSION" --header "PRIVATE-TOKEN: $PROJECT_ACCESS_KEY" --form "value=$VERSION"'

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "Releasing $TAG"
  needs: 
    - deploy-autorite-module
    - deploy-encherisseur-module
    - deploy-vendeur-module
    - test-socketwrapper-module
  release:
    tag_name: '$PROJECT_VERSION'
    name: 'Release v$PROJECT_VERSION'
    description: 'Generated using the release-cli'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: "Autorite"
          url: "$REGISTRY_URL/applications-encheres/$PROJECT_VERSION/autorite-$PROJECT_VERSION.jar"
        - name: "Vendeur"
          url: "$REGISTRY_URL/applications-encheres/$PROJECT_VERSION/vendeur-$PROJECT_VERSION.jar"
        - name: "Encherisseur"
          url: "$REGISTRY_URL/applications-encheres/$PROJECT_VERSION/encherisseur-$PROJECT_VERSION.jar"